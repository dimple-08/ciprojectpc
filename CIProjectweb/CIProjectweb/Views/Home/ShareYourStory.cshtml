@using CIProjectweb.Entities.ViewModels
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "~/Views/Shared/_HeaderLayoutcshtml.cshtml";
}
@model ShareStoryViewModel
<style>
       #drag-and-drop {
                border: 2px dashed #ccc;
                padding: 20px;
                text-align: center;
                font-size: 1.2em;
                color: #666;
            }
            #drag-and-drop .selected-files {
                margin-top: 20px;
                font-size: 1.1em;
            }
            #image-preview {
      display: flex;
      flex-wrap: wrap;
      margin-top: 20px;
    }

    #image-preview img {
      width: 150px;
      height: 150px;
      object-fit: cover;
      margin-right: 10px;
      margin-bottom: 10px;
    }
     .form {
         width: 500px;
         margin: 5% auto;
    }
     .form__container {
         position: relative;
         width: 100%;
         height: 200px;
         border: 2px dashed silver;
         display: flex;
         justify-content: center;
         align-items: center;
         font-size: 18px;
         color: silver;
         margin-bottom: 5px;
    }
     .form__container.active {
         background-color: rgba(192, 192, 192, 0.2);
    }
     .form__file {
         position: absolute;
         width: 100%;
         height: 100%;
         top: 0;
         left: 0;
         cursor: pointer;
         opacity: 0;
    }
     .form__files-container {
         display: block;
         width: 100%;
         font-size: 0;
         margin-top: 20px;
    }
     .form__image-container {
         display: inline-block;
         width: fit-content;
         height: 200px;
         margin-bottom: 10px;
         position: relative;
    }
     .form__image-container:not(:nth-child(5n)) {
         margin-right: 1%;
         width:fit-content;
    }
     .form__image-container:after {
         content: "✕";
        width: 200px;
        position: absolute;
        line-height: 200px;
        font-size: 30px;
        margin: auto;
        top: 0;
        right: 232px;
        left: 0;
        text-align: center;
        font-weight: bold;
        color: #fff;
        background-color: rgba(0, 0, 0, 0.4);
        opacity: 0;
        transition: opacity 0.2s ease-in-out;
    }
     .form__image-container:hover:after {
         opacity: 1;
         cursor: pointer;
    }
     .form__image {
         object-fit: contain;
         width: 200px;
         height: 100%;
    }

</style>
<script src="https://cdn.ckeditor.com/4.20.2/standard-all/ckeditor.js"></script>

    <div class="shareStoryForm container mt-4">

        <span><h3>Share Your Story</h3></span>
        <div class="row ms-1">
            <div class="form-group col-lg-4 col-md-4 col-sm-12">
                <label for="exampleFormControlSelect1">Select Mission</label>
                <select class="form-control" onchange="searchStoryByMission();" id="exampleFormControlSelect1" required>
                    <option hidden>Select Your Mission</option>
                    @foreach(var item in Model.missionsList){
                        <option value="@item.MissionId">@item.Title</option>
                    }
                </select>
            </div>
            <div class="form-group col-lg-4 col-md-4 col-sm-12">
                <label for="exampleFormControlSelect1">My Story Title</label>
                <input class="form-control" id="storytitle" type="text" placeholder="Enter Story Title" required>
            </div>
            <div class="form-group col-lg-4 col-md-4 col-sm-12">
                <label for="exampleFormControlSelect1">Date</label>
                <input class="form-control" id="releasedate" type="date" placeholder="Select Date" required>
            </div>

        </div>
        <div class="form-group">
            <label for="exampleFormControlSelect1">My Story</label>
            <textarea cols="80" id="editor1" name="editor1" rows="8" placeholder="Enter Your Story" required>
                       
            </textarea>
        </div>
        <div class="form-group ">
            <label for="exampleFormControlSelect1">Enter Video URL</label>
            <textarea class="form-control" id="video-urls"  placeholder="Select Date" required></textarea>
          
        </div>

        <div class="form-group ">
            <label for="exampleFormControlSelect1">Upload your Photos</label>
            <label class="form__container" id="upload-container">
                Choose or Drag & Drop Files
                <input class="form__file" id="upload-files" type="file" accept="image/*" multiple="multiple" required />
            </label>
            <div class="form__files-container" id="files-list-container"></div>
        </div>
        <div class="form-group">
                <div class="d-flex justify-content-between">
                   <div >
                       <button class="cancelbtn" onclick="location.href='@Url.Action("storyListingPage", "Home")'" >Close</button>
                       <a class="btn canclebtn previewbtn d-none" id="" target="_blank">Preview</a>
                   </div>
                   <div>
                       <button class="submitbtn" value="save" onclick="shareStory(@int.Parse(@Context.Session.GetString("UserId")),this.value)">
                           Save
                       </button>
                       <button  class="submitbtn" value="submit" onclick="shareStory(@int.Parse(@Context.Session.GetString("UserId")),this.value)">Submit</button>
                   </div>
                </div>
        </div>
    </div>


@*<script>
    CKEDITOR.replace('editor1', {
        fullPage: true,
        extraPlugins: 'docprops',
        // Disable content filtering because if you use full page mode, you probably
        // want to  freely enter any HTML content in source mode without any limitations.
        allowedContent: true,
        height: 320,
        removeButtons: 'PasteFromWord'
    });


</script>
<script>
    const INPUT_FILE = document.querySelector("#upload-files");
    const INPUT_CONTAINER = document.querySelector("#upload-container");
    const FILES_LIST_CONTAINER = document.querySelector("#files-list-container");
    const FILE_LIST = [];
    let UPLOADED_FILES = [];

    const multipleEvents = (element, eventNames, listener) => {
        const events = eventNames.split(" ");

        events.forEach((event) => {
            element.addEventListener(event, listener, false);
        });
    };

    const previewImages = () => {
        FILES_LIST_CONTAINER.innerHTML = "";
        if (FILE_LIST.length > 0) {
            FILE_LIST.forEach((addedFile, index) => {
                const content = `
            <div class="form__image-container js-remove-image" data-index="${index}">
              <img class="form__image" src="${addedFile.url}" alt="${addedFile.name}">
            </div>
          `;

                FILES_LIST_CONTAINER.insertAdjacentHTML("beforeEnd", content);
            });
        } else {
            console.log("empty");
            INPUT_FILE.value = "";
        }
    };

    const fileUpload = () => {
        if (FILES_LIST_CONTAINER) {
            multipleEvents(INPUT_FILE, "click dragstart dragover", () => {
                INPUT_CONTAINER.classList.add("active");
            });

            multipleEvents(INPUT_FILE, "dragleave dragend drop change blur", () => {
                INPUT_CONTAINER.classList.remove("active");
            });

            INPUT_FILE.addEventListener("change", () => {
                const files = [...INPUT_FILE.files];
                console.log("changed");
                files.forEach((file) => {
                    const fileURL = URL.createObjectURL(file);
                    const fileName = file.name;
                    if (!file.type.match("image/")) {
                        alert(file.name + " is not an image");
                        console.log(file.type);
                    } else {
                        const uploadedFiles = {
                            name: fileName,
                            url: fileURL
                        };

                        FILE_LIST.push(uploadedFiles);
                    }
                });

                console.log(FILE_LIST); //final list of uploaded files
                previewImages();
                UPLOADED_FILES = document.querySelectorAll(".js-remove-image");
                removeFile();
            });
        }
    };

    const removeFile = () => {
        UPLOADED_FILES = document.querySelectorAll(".js-remove-image");

        if (UPLOADED_FILES) {
            UPLOADED_FILES.forEach((image) => {
                image.addEventListener("click", function() {
                    const fileIndex = this.getAttribute("data-index");

                    FILE_LIST.splice(fileIndex, 1);
                    previewImages();
                    removeFile();
                });
            });
        } else {
            [...INPUT_FILE.files] = [];
        }
    };

    fileUpload();
    removeFile();

</script>*@
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="~/js/shareStory.js"></script>
